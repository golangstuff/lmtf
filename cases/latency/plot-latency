#!/bin/sh

if [ -z $1 ]; then
	printf "No release name given!\n"
	exit 1
elif [ -z $2 ]; then
	printf "No protocol version given!\n"
	exit 1
else
	RELEASE=$1
	PROTO=$2
fi

TASKS="$RELEASE-bare $RELEASE-ovm $RELEASE-vmware"

for i in $TASKS; do
	if ! [ -d $i ]; then
		printf "$i does not exist!\n"
		exit 1;
	fi
done

for i in $TASKS; do
	DFILE=$i.avg
	rm -f $DFILE
	count=0
	for j in $i/$2-*.dat; do
		count=$(echo "$count+1" | bc)
		printf "$count " >> $DFILE
		sed -n '3p' $j >> $DFILE
	done
done

TIME=`date +%Y%m%dT%H%M%S`
TITLE1=bare
TITLE2=ovm
TITLE3=vmware
OUTPUT=latency-${PROTO}_average_$TIME.png
DFILE1=$1-$TITLE1.avg
DFILE2=$1-$TITLE2.avg
DFILE3=$1-$TITLE3.avg

gnuplot << EOF

set title "network-perf - $RELEASE $PROTO echo latency"
set xlabel "packet size (byte)"
set ylabel "rtt (ms)"
#set y2label "dev"
#set y2tics
#set ytics nomirror

set key tmargin
set tics nomirror
#set border 3
set style data linespoints
set grid
#set terminal png
set terminal pngcairo notransparent font "Helvetica, 12" 

set xtics("64" 1, "256" 2, "512" 3, "1024" 4, "2048" 5, "4096" 6, "8192" 7)
set output "$OUTPUT"

#plot "$DFILE1" t "$TITLE1" pt 13
plot "$DFILE1" t "$TITLE1" pt 13, "$DFILE2" t "$TITLE2" pt 7, "$DFILE3" t "$TITLE3" pt 2

EOF
